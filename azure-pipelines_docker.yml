# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
 - name: ARTIFACT2SCAN
   value: struts2-showcase.war
 - name: REPORT_PATH
   value: RLSecure

steps:
- task: Maven@3
  displayName: 'Build'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx2048m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- bash: |
    mkdir -p $(REPORT_PATH)
    docker pull reversinglabs/rl-scanner:latest
    docker run --rm -u $(id -u):$(id -g) \
      -e RLSECURE_ENCODED_LICENSE=$(RLSECURE_ENCODED_LICENSE) \
      -e RLSECURE_SITE_KEY=$(RLSECURE_SITE_KEY) \
      -v $(System.DefaultWorkingDirectory)/target:/packages:ro \
      -v $(System.DefaultWorkingDirectory)/$(REPORT_PATH):/report \
      reversinglabs/rl-scanner:latest \
        rl-scan \
          --package-path=/packages/$(ARTIFACT2SCAN) \
          --report-path=/report \
          --report-format=all
  displayName: 'RL scan via Docker image'

- publish: $(System.DefaultWorkingDirectory)/$(REPORT_PATH)/report.cyclonedx.json
  displayName: 'Publish CycloneDX'
  artifact: 'CycloneDX-SBOM'
  condition: succeededOrFailed()

- publish: $(System.DefaultWorkingDirectory)/$(REPORT_PATH)/report.spdx.json
  displayName: 'Publish SPDX'
  artifact: 'SPDX-SBOM'
  condition: succeededOrFailed()

- publish: $(System.DefaultWorkingDirectory)/$(REPORT_PATH)/report.rl.json
  displayName: 'Publish RL-json'
  artifact: ReversingLabs-JSONreport
  condition: succeededOrFailed()

- publish: $(System.DefaultWorkingDirectory)/$(REPORT_PATH)/rl-html
  displayName: 'Publish RL-HTML'
  artifact: ReversingLabs-HTMLreport
  condition: succeededOrFailed()

